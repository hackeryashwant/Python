Session Python GUI Project: Mini Student Management System
------------------------------------------------------------

1) Introduction:
   • Project: Create a simple student management system using Tkinter.
   • Features:
       - Add Student
       - View Students
       - Delete Student
       - Update Student
   • Data stored in a list or CSV file.

------------------------------------------------------------

2) Import Modules:
   from tkinter import *
   from tkinter import messagebox
   import csv

------------------------------------------------------------

3) Global Variables:
   students = []

------------------------------------------------------------

4) Add Student Function:
   def add_student():
       name = entry_name.get()
       age = entry_age.get()
       if name and age:
           students.append({"name": name, "age": age})
           messagebox.showinfo("Success", "Student Added")
           entry_name.delete(0, END)
           entry_age.delete(0, END)
           view_students()
       else:
           messagebox.showwarning("Error", "Please enter all fields")

------------------------------------------------------------

5) View Students Function:
   def view_students():
       listbox.delete(0, END)
       for i, student in enumerate(students, start=1):
           listbox.insert(END, f"{i}. {student['name']} - {student['age']}")

------------------------------------------------------------

6) Delete Student Function:
   def delete_student():
       selected = listbox.curselection()
       if selected:
           index = selected[0]
           students.pop(index)
           view_students()
           messagebox.showinfo("Deleted", "Student Deleted")
       else:
           messagebox.showwarning("Error", "Select a student to delete")

------------------------------------------------------------

7) GUI Layout:
   root = Tk()
   root.title("Student Management System")

   Label(root, text="Name").grid(row=0, column=0)
   Label(root, text="Age").grid(row=1, column=0)
   entry_name = Entry(root)
   entry_age = Entry(root)
   entry_name.grid(row=0, column=1)
   entry_age.grid(row=1, column=1)

   Button(root, text="Add Student", command=add_student).grid(row=2, column=0, columnspan=2)
   listbox = Listbox(root, width=40)
   listbox.grid(row=3, column=0, columnspan=2)
   Button(root, text="Delete Student", command=delete_student).grid(row=4, column=0, columnspan=2)

   root.mainloop()

------------------------------------------------------------

8) Optional: Save to CSV:
   def save_to_csv():
       with open("students.csv", "w", newline="") as file:
           writer = csv.writer(file)
           writer.writerow(["Name", "Age"])
           for student in students:
               writer.writerow([student['name'], student['age']])
       messagebox.showinfo("Saved", "Data saved to students.csv")

   Button(root, text="Save to CSV", command=save_to_csv).grid(row=5, column=0, columnspan=2)

------------------------------------------------------------
End of Session 35
Project Complete: Mini Student Management System
------------------------------------------------------------
