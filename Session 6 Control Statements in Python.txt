Session 6: Control Statements in Python
------------------------------------------------------------

1) Introduction:
   • Control statements are used to control the flow 
     of execution inside loops or functions.
   • Python provides:
       1) break
       2) continue
       3) pass
       4) return

------------------------------------------------------------

2) break Statement:
   • Used to terminate the loop immediately.
   • Control moves to the first statement after the loop.

   Example 1:
   for i in range(1, 10):
       if i == 5:
           break
       print(i)

   Output:
   1
   2
   3
   4

------------------------------------------------------------

Example 2 (while loop):
   i = 1
   while i <= 10:
       if i == 6:
           break
       print(i)
       i += 1

   Output:
   1
   2
   3
   4
   5

------------------------------------------------------------

3) continue Statement:
   • Skips the current iteration and continues the loop.
   • Used when you want to skip certain values.

   Example 1:
   for i in range(1, 6):
       if i == 3:
           continue
       print(i)

   Output:
   1
   2
   4
   5

------------------------------------------------------------

Example 2 (while loop):
   i = 0
   while i < 5:
       i += 1
       if i == 3:
           continue
       print(i)

   Output:
   1
   2
   4
   5

------------------------------------------------------------

4) pass Statement:
   • pass is a null statement — it does nothing.
   • Used as a placeholder for future code.

   Example 1:
   for i in range(5):
       if i == 2:
           pass
       print(i)

   Output:
   0
   1
   2
   3
   4

------------------------------------------------------------

Example 2 (empty block):
   def my_function():
       pass

   print("Function defined successfully")

   Output:
   Function defined successfully

------------------------------------------------------------

5) return Statement:
   • Used inside a function to return a value 
     and exit the function immediately.

   Syntax:
   return [expression]

   Example 1:
   def add(a, b):
       return a + b

   result = add(5, 3)
   print("Sum =", result)

   Output:
   Sum = 8

------------------------------------------------------------

Example 2:
   def check_even(num):
       if num % 2 == 0:
           return "Even"
       else:
           return "Odd"

   print(check_even(7))
   print(check_even(12))

   Output:
   Odd
   Even

------------------------------------------------------------

6) Difference Summary:

   Statement   | Purpose
   ------------------------------------------
   break       | Exits loop immediately
   continue    | Skips current iteration
   pass        | Does nothing (placeholder)
   return      | Exits function and returns value

------------------------------------------------------------

7) Practical Example:
   for i in range(1, 10):
       if i == 3:
           continue
       elif i == 7:
           break
       print(i)
   else:
       print("Loop Completed")

   Output:
   1
   2
   4
   5
   6

------------------------------------------------------------
End of Session 6
Next Session → Functions in Python (User-defined, Arguments, Return values)
------------------------------------------------------------
